# –ó–∞–≤–¥–∞–Ω–Ω—è 3
# –†–æ–∑—Ä–æ–±—ñ—Ç—å —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø—Ä–∏–π–º–∞—î —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –≤ —è–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—É –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞ —ñ –≤—ñ–∑—É–∞–ª—ñ–∑—É—î —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ü—ñ—î—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó, 
# –≤–∏–≤–æ–¥—è—á–∏ —ñ–º–µ–Ω–∞ –≤—Å—ñ—Ö –ø—ñ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π —Ç–∞ —Ñ–∞–π–ª—ñ–≤. –î–ª—è –∫—Ä–∞—â–æ–≥–æ –≤—ñ–∑—É–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è, —ñ–º–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π —Ç–∞ —Ñ–∞–π–ª—ñ–≤ –º–∞—é—Ç—å –≤—ñ–¥—Ä—ñ–∑–Ω—è—Ç–∏—Å—è –∑–∞ –∫–æ–ª—å–æ—Ä–æ–º.

# –ü–µ—Ä–µ–¥ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è–º –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ + colorama:
# python -m venv env
# .\.venv\Scripts\activate.bat
# pip install colorama


import sys
from pathlib import Path
from colorama import Fore, Style

def print_directory_contents(path, indent=""):
    """
    Recursively prints the contents of a directory.

    Args:
        path (Path): The path to the directory.
        indent (str, optional): The indentation string. Defaults to "".
    """
    try:
        # Check if the path exists
        if not path.exists():
            print(Fore.RED + "–í–∫–∞–∑–∞–Ω–∏–π —à–ª—è—Ö –Ω–µ —ñ—Å–Ω—É—î." + Style.RESET_ALL)
            return

        # Check if the path is a directory
        if not path.is_dir():
            print(Fore.RED + "–í–∫–∞–∑–∞–Ω–∏–π —à–ª—è—Ö –Ω–µ —î –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—î—é." + Style.RESET_ALL)
            return
        
        # Print the directory name
        if not indent:
            print(Fore.BLUE + indent + "üì¶ " + path.name + Style.RESET_ALL)
        
        # Iterate over the items in the directory
        for item in path.iterdir():
            if item.is_dir():
                # Print the subdirectory name
                print(Fore.BLUE + indent + " ‚î£üìÇ " + item.name + Style.RESET_ALL)
                # Recursively print the contents of the subdirectory
                print_directory_contents(item, indent + " ‚îÉ ")
            else:
                # Print the file name
                print(Fore.GREEN + indent + " ‚î£üìú " + item.name + Style.RESET_ALL)
    except Exception as e:
        # Print the error message
        print(Fore.RED + f"–ü–æ–º–∏–ª–∫–∞: {e}" + Style.RESET_ALL)


def main():
    """
    Entry point of the program.
    
    If a directory path is provided as a command-line argument, it prints the contents of the directory.
    Otherwise, it displays an error message.
    """
    # Check if a directory path is provided as a command-line argument
    if len(sys.argv) > 1:
        directory_path = Path(sys.argv[1])
        # Print the contents of the directory
        print_directory_contents(directory_path)
    else:
        # Display an error message if no directory path is provided
        print(Fore.RED + "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç." + Style.RESET_ALL)

if __name__ == "__main__":
    # main()
    print_directory_contents(Path('G:/My Drive/GoIT/Python/goit-pycore-hw-03'))

# –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: –Ø–∫—â–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ —Å–∫—Ä–∏–ø—Ç —Ç–∞ –ø–µ—Ä–µ–¥–∞—Ç–∏ –π–æ–º—É –∞–±—Å–æ–ª—é—Ç–Ω–∏–π —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä
# python hw03.py /—à–ª—è—Ö/–¥–æ/–≤–∞—à–æ—ó/–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó

# python hw03.py "G:/My Drive/GoIT/Python/goit-pycore-hw-04/task3"
# python hw03.py 'G:/My Drive/GoIT/Python/goit-pycore-hw-04/task3/.venv/Scripts'
# python hw03.py "G:/My Drive/GoIT/Python/goit-pycore-hw-04/task2"
# python hw03.py 'G:/My Drive/GoIT/Python/goit-pycore-hw-03'

